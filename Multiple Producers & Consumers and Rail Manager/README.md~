# Multiple Producers and Consumers and Rail Manager

**Multiple Producers and Consumers**: Implementation of a system which ensures synchronisation in a producer-consumer
scenario. We demonstrate deadlock condition and provide solutions for
avoiding deadlock. In this system, a main process creates 5 producer processes and 5
consumer processes who share 2 resources (queues). The producer's job is to generate a
piece of data, put it into the queue and repeat. At the same time, the consumer process
consumes the data i.e., removes it from the queue. In the implementation, synchronization and mutual exclusion have been ensured. For instance, the producer should be stopped
if the buffer is full and that the consumer should be blocked if the buffer is empty. 
Mutual exclusion is also enforced while the processes are trying to acquire the resources.



The complete problem overview is given in *problem.pdf*.


Commands to use to run the program:
-----------------------------------
* Compile all files

  ```
  make all
  ```

* Clean all files

  ```
  make clean
  ```

* Run

  ```
  ./master k m f
  ```

k = no of processes (e.g. 5)

m = no of pages in virtual space (e.g. 20)

f = no of frames (e.g. 10)

The output will be shown as required and also written to result.txt
